"use strict";(self.webpackChunklyra=self.webpackChunklyra||[]).push([[43],{7522:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(9901);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(h,o(o({ref:t},p),{},{components:r})):n.createElement(h,o({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},53:(e,t,r)=>{r.r(t),r.d(t,{Highlight:()=>p,assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(2875),a=(r(9901),r(7522));const i={sidebar_position:2},o="Insert Data",s={unversionedId:"usage/insert-data",id:"usage/insert-data",title:"Insert Data",description:"Whenever we create a database with Lyra we must specify a Schema, which represents the entry we are going to insert.",source:"@site/docs/usage/insert-data.md",sourceDirName:"usage",slug:"/usage/insert-data",permalink:"/lyra/docs/usage/insert-data",draft:!1,editUrl:"https://github.com/nearform/lyra/edit/main/packages/docs/docs/usage/insert-data.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Create a new Lyra instance",permalink:"/lyra/docs/usage/creating-a-new-lyra-instance"},next:{title:"Search Data",permalink:"/lyra/docs/usage/search-data"}},l={},c=[{value:"Insert",id:"insert",level:2},{value:"Parameters",id:"parameters",level:3},{value:'<Highlight color="#ff5b9b">Doc IDs</Highlight>',id:"doc-ids",level:3}],p=e=>{let{children:t,color:r}=e;return(0,a.kt)("span",{style:{backgroundColor:r,borderRadius:"8px",color:"#fff",padding:"10px",cursor:"pointer"}},t)},u={toc:c,Highlight:p};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"insert-data"},"Insert Data"),(0,a.kt)("p",null,"Whenever we create a database with Lyra we must specify a ",(0,a.kt)("inlineCode",{parentName:"p"},"Schema"),", which represents the entry we are going to insert."),(0,a.kt)("blockquote",null,(0,a.kt)("small",null,"If you don't know how to create a lyra database, ",(0,a.kt)("a",{href:"/docs/usage/creating-a-new-lyra-instance"},"go check it out")," before proceeding.")),(0,a.kt)("p",null,"Our database and schema look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="lyra.js"',title:'"lyra.js"'},"import { create, insert } from '@nearfom/lyra'; \n\nconst movieDB = create({\n  schema: {\n    title: 'string',\n    director: 'string',\n    plot: 'string',\n    year: 'number',\n    isFavorite: 'boolean'\n  }\n});\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Notice that we are now also ",(0,a.kt)("strong",{parentName:"p"},"importing")," the ",(0,a.kt)("inlineCode",{parentName:"p"},"insert")," method to do our insertions.")),(0,a.kt)("h2",{id:"insert"},"Insert"),(0,a.kt)("p",null,"Data insertion in Lyra is quick and intuitive:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="lyra.js"',title:'"lyra.js"'},"const { id: thePrestige } = insert(movieDB, {\n  title: 'The prestige',\n  director: 'Christopher Nolan',\n  plot: 'Two friends and fellow magicians become bitter enemies after a sudden tragedy. As they devote themselves to this rivalry, they make sacrifices that bring them fame but with terrible consequences.',\n  year: 2006,\n  isFavorite: true\n});\n\nconst { id: bigFish } = insert(movieDB, {\n  title: 'Big Fish',\n  director: 'Tim Burton',\n  plot: 'Will Bloom returns home to care for his dying father, who had a penchant for telling unbelievable stories. After he passes away, Will tries to find out if his tales were really true.',\n  year: 2004,\n  isFavorite: true\n});\n\nconst { id: harryPotter } = insert(movieDB, {\n  title: 'Harry Potter and the Philosopher\\'s Stone',\n  director: 'Chris Columbus',\n  plot: 'Harry Potter, an eleven-year-old orphan, discovers that he is a wizard and is invited to study at Hogwarts. Even as he escapes a dreary life and enters a world of magic, he finds trouble awaiting him.',\n  year: 2001,\n  isFavorite: false\n});\n")),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"insert")," method takes two mandatory parameters: "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"the ",(0,a.kt)("inlineCode",{parentName:"li"},"database")," in which we want the insertion to occur"),(0,a.kt)("li",{parentName:"ol"},"the ",(0,a.kt)("inlineCode",{parentName:"li"},"document")," to insert (which must abide to the specified ",(0,a.kt)("strong",{parentName:"li"},"schema"),")")),(0,a.kt)("p",null,"The optional parameters can be configuration properties (e.g. ",(0,a.kt)("a",{href:"/docs/usage/creating-a-new-lyra-instance#input-analyzer"},"the override")," of the default language for the given document)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="lyra.js"',title:'"lyra.js"'},"insert(movieDB, myDocument, { language: 'spanish' });\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"doc-ids"},(0,a.kt)(p,{color:"#ff5b9b",mdxType:"Highlight"},"Doc IDs")),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"insert")," method returns a unique ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," for the inserted document."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"console.log(harryPotter) // 79741872-5\n")))}d.isMDXComponent=!0}}]);